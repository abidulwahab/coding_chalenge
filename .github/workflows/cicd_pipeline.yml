name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2  #  Change to your AWS region

      - name: Verify AWS Identity
        run: aws sts get-caller-identity
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform destroy -auto-approve
        working-directory: terraform
        
        
  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Generate SSH Key
        run: |
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          cat ~/.ssh/id_rsa.pub > ansible/id_rsa.pub

      - name: Copy SSH Key to Ansible Controller
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$ANSIBLE_CONTROLLER_IP "mkdir -p ~/.ssh && chmod 700 ~/.ssh"
          scp ~/.ssh/id_rsa.pub ubuntu@$ANSIBLE_CONTROLLER_IP:~/.ssh/id_rsa.pub
          ssh ubuntu@$ANSIBLE_CONTROLLER_IP "cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

      - name: Set Up SSH Access to Web Servers
        run: |
          for ip in $WEB_SERVERS_IPS; do
            ssh ubuntu@$ANSIBLE_CONTROLLER_IP "ssh-keyscan $ip >> ~/.ssh/known_hosts"
            ssh ubuntu@$ANSIBLE_CONTROLLER_IP "ssh -o StrictHostKeyChecking=no ubuntu@$ip 'echo SSH Connection Successful'"
          done

      - name: Run Ansible Playbook
        run: |
          ssh ubuntu@$ANSIBLE_CONTROLLER_IP "ansible-playbook -i inventory.ini ansible/playbook.yml"

